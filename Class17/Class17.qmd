---
title: "Class17"
author: "Joel Kosareff"
format: gfm
---

Lets import the vaccination data

```{r}
vax <- read.csv("covid19vac.csv")
View(vax)
```

> Q1. What column details the total number of people fully vaccinated?

persons_fully_vaccinated

>Q2. What column details the Zip code tabulation area?

zip_code_tabulation_area
>Q3. What is the earliest date in this dataset?

```{r}
vax$as_of_date[1]
```

>Q4. What is the latest date in this dataset?

```{r}
tail(vax$as_of_date, 1)
```

Lets call skim to get an overview

```{r}
skimr::skim(vax)
```


>Q5. How many numeric columns are in this dataset?

13
>Q6. Note that there are “missing values” in the dataset. How many NA values there in the persons_fully_vaccinated column?

```{r}
sum( is.na(vax$persons_fully_vaccinated) )
```

>Q7. What percent of persons_fully_vaccinated values are missing (to 2 significant figures)?

```{r}
(sum( is.na(vax$persons_fully_vaccinated) ))/length(vax$persons_fully_vaccinated)
```

>Q8. [Optional]: Why might this data be missing?

Vaccination data in that zip code may note have been tracked at that time


## Working with dates


```{r}
library(lubridate)
```

What day is it today

```{r}
today()
```

The as_of_date column of our data is currently not that usable. For example we can’t easily do math with it like answering the simple question how many days have passed since data was first recorded:

```{r}
# This will give an Error!
##today() - vax$as_of_date[1]
```

However if we convert our date data into a lubridate format things like this will be much easier as well as plotting time series data later on.

```{r}
# Specify that we are using the year-month-day format
vax$as_of_date <- ymd(vax$as_of_date)
```

```{r}
today() - vax$as_of_date[1]
```

Using the last and the first date value we can now determine how many days the dataset span?

```{r}
vax$as_of_date[nrow(vax)] - vax$as_of_date[1]
```

>Q9. How many days have passed since the last update of the dataset?

```{r}
today() - vax$as_of_date[nrow(vax)]
```

>Q10. How many unique dates are in the dataset (i.e. how many different dates are detailed)?

```{r}
length(unique(vax$as_of_date))
```

## Working with ZIP codes


```{r}
library(zipcodeR)
```

```{r}
geocode_zip('92037')
```

Calculate the distance between the centroids of any two ZIP codes in miles, e.g.

```{r}
zip_distance('92037','92109')
```

More usefully, we can pull census data about ZIP code areas (including median household income etc.). For example:

```{r}
reverse_zipcode(c('92037', "92109") )
```

## Focus on the San Diego area

Let’s now focus in on the San Diego County area by restricting ourselves first to vax$county == "San Diego" entries. We have two main choices on how to do this. The first using base R the second using the dplyr package:

```{r}
sd <- vax[ vax$county == "San Diego", ]
```

Using dplyr looks like this

```{r}
library(dplyr)

sd <- filter(vax, county == "San Diego")

nrow(sd)
```

Using dplyr is often more convenient when we are subsetting across multiple criteria - for example all San Diego county areas with a population of over 10,000.

```{r}
sd.10 <- filter(vax, county == "San Diego" &
                age5_plus_population > 10000)
```

>Q11. How many distinct zip codes are listed for San Diego County?

```{r}
length(unique(sd$zip_code_tabulation_area))
```

>Q12. What San Diego County Zip code area has the largest 12 + Population in this dataset?

```{r}
sd$zip_code_tabulation_area[which.max(sd$age12_plus_population)]
```


>Q13. What is the overall average “Percent of Population Fully Vaccinated” value for all San Diego “County” as of “2022-11-15”?

```{r}
sd.2022 <- filter(vax, county == "San Diego" &
                as_of_date == "2022-11-15")
```

```{r}
mean(sd.2022$percent_of_population_fully_vaccinated, na.rm = TRUE)
```

>Q14. Using either ggplot or base R graphics make a summary figure that shows the distribution of Percent of Population Fully Vaccinated values as of “2022-11-15”?

```{r}
hist(sd.2022$percent_of_population_fully_vaccinated)
```

## Focus on UCSD/La Jolla

UC San Diego resides in the 92037 ZIP code area and is listed with an age 5+ population size of 36,144.

```{r}
ucsd <- filter(sd, zip_code_tabulation_area=="92037")
ucsd[1,]$age5_plus_population
```

>Q15. Using ggplot make a graph of the vaccination rate time course for the 92037 ZIP code area:

```{r}
library(ggplot2)
ggplot(ucsd) +
  aes(x = ucsd$as_of_date,
      y = ucsd$percent_of_population_with_1_plus_dose) +
  geom_point() +
  geom_line(group=1) +
  ylim(c(0,1)) +
  labs(x = "Date", y="Percent Vaccinated")
```

## Comparing to similar sized areas

Let’s return to the full dataset and look across every zip code area with a population at least as large as that of 92037 on as_of_date “2022-02-22”.

```{r}
# Subset to all CA areas with a population as large as 92037
vax.36 <- filter(vax, age5_plus_population > 36144 &
                as_of_date == "2022-11-15")

head(vax.36)
```

>Q16. Calculate the mean “Percent of Population Fully Vaccinated” for ZIP code areas with a population as large as 92037 (La Jolla) as_of_date “2022-11-15”. Add this as a straight horizontal line to your plot from above with the geom_hline() function?

```{r}
filtermean <- mean(vax.36$percent_of_population_fully_vaccinated, na.rm = TRUE)
filtermean
```
```{r}
ggplot(ucsd) +
  aes(x = ucsd$as_of_date,
      y = ucsd$percent_of_population_with_1_plus_dose) +
  geom_point() +
  geom_line(group=1) +
  ylim(c(0,1)) +
  labs(x = "Date", y="Percent Vaccinated") + geom_hline(aes(yintercept = filtermean))
```

>Q17. What is the 6 number summary (Min, 1st Qu., Median, Mean, 3rd Qu., and Max) of the “Percent of Population Fully Vaccinated” values for ZIP code areas with a population as large as 92037 (La Jolla) as_of_date “2022-11-15”?

```{r}
summary(vax.36$percent_of_population_fully_vaccinated)
```

>Q18. Using ggplot generate a histogram of this data.

```{r}
ggplot(vax.36) + aes(x = vax.36$percent_of_population_fully_vaccinated) + geom_histogram()
```

>Q19. Is the 92109 and 92040 ZIP code areas above or below the average value you calculated for all these above?

```{r}
vax.921 <- filter(vax, age5_plus_population > 36144 &
                as_of_date == "2022-11-15" & zip_code_tabulation_area == "92109")
vax.920 <- filter(vax, age5_plus_population > 36144 &
                as_of_date == "2022-11-15" & zip_code_tabulation_area == "92040")
mean(vax.920$percent_of_population_fully_vaccinated, na.rm = TRUE) > filtermean
mean(vax.921$percent_of_population_fully_vaccinated, na.rm = TRUE) > filtermean
```

Both are below the previously calculated average


>Q20. Finally make a time course plot of vaccination progress for all areas in the full dataset with a age5_plus_population > 36144.

```{r}
vax.36.all <- filter(vax, age5_plus_population > 36144)


ggplot(vax.36.all) +
  aes(as_of_date,
      percent_of_population_fully_vaccinated, 
      group=zip_code_tabulation_area) +
  geom_line(alpha=0.2, color="blue") +
  ylim(0,1) +
  labs(x="Date", y="Percent Vaccinated",
       title="Vaccination Rate Across California",
       subtitle="only areas with a population above 36k are shown") +
  geom_hline(yintercept = filtermean, linetype="dashed")
```


